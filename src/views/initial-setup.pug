extends shared/layout/plane.pug
block content
    header(class="header")
        div
            h1 Account setup
    div(class="main")
        form(id="loginform" action="setup" method="post")
            label Name
                input(type="text" name="name" id="name")
            label
                span(class="visuallyhidden") Profile picture
                - var profile = { id: 'imgOut', imageUrl: '/assets/ralph-wave.gif', alt: 'Profile image' }
                include shared/profile-image.pug
                input(type="file" accept="image/*" id="imgInp" class="visually-hidden")
            
            div
                label(for="department-select") Choose department:
                select(name="departments" id="department-select")
                    option(value="")
                    each opt, index in model.departments
                        option(value=index)= opt.title

            label Jobtitle
                input(type="text" name="jobtitle" id="jobtitle")
            button(type="submit") Done
block footerScripts
    script(src="./js/main.js")
    //- script(src="/socket.io/socket.io.js")
    script.
        //- const socket = io();
        const form = document.getElementById('loginform');
        const name = document.getElementById('name');
        const department = document.getElementById('department-select');
        const jobtitle = document.getElementById('jobtitle');
        const fileIn = document.getElementById('imgInp');
        const fileOut = document.getElementById('imgOut');

        const readUrl = event => {
            if(event.files && event.files[0]) {
                let reader = new FileReader();
                    reader.onload = event => fileOut.src = event.target.result;
                    reader.readAsDataURL(event.files[0])
            }
        }

        fileIn.onchange = () => {
            readUrl(this);
        };

        //- const getCookie = name => {
        //-     const nameEQ = name + "=";
        //-     const ca = document.cookie.split(';');
        //-     for(let i=0;i < ca.length;i++) {
        //-         const c = ca[i];
        //-         while (c.charAt(0)==' ') c = c.substring(1,c.length);
        //-         if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
        //-     }
        //-     return null;
        //- }

        //- const setup = event => {
        //-     event.preventDefault();
        //-     socket.emit('setup', {
        //-         username: name.value,
        //-         profileImg: fileOut.src,
        //-         department: department.value,
        //-         jobtitle: jobtitle.value
        //-     });
        //-     return false;
        //- };
        //- form.addEventListener('submit', setup);
        
